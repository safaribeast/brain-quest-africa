rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Basic function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) || isAdmin();

      // Question history subcollection
      match /questionHistory/{questionId} {
        allow read, write: if isOwner(userId) || isAdmin();
      }
    }

    // Game sessions
    match /games/{gameId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (request.auth.uid in resource.data.participants || isAdmin());
      allow delete: if isAdmin();
    }
    
    // Questions
    match /questions/{questionId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Progress tracking
    match /progress/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
    }
    
    // Game Results (Leaderboard)
    match /gameResults/{resultId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isOwner(resource.data.userId) || isAdmin();
    }

    // Activity logs (for admin dashboard)
    match /activity/{activityId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
  }
}